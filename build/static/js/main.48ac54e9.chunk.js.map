{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Login.js","components/Register.js","components/StockChart.js","components/UserOverview.js","components/UserBalance.js","components/User.js","components/StockInterface.js","components/StockPage.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["NavbarComponent","props","className","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","Link","href","jwt","onClick","logout","Home","Login","history","useHistory","useState","email","setEmail","password","setPassword","onSubmit","event","preventDefault","data","fetch","apiUrl","method","body","JSON","stringify","credentials","headers","then","res","json","jwtAuth","token","user","push","catch","error","console","FormGroup","controlId","FormLabel","FormControl","autoFocus","type","value","onChange","e","target","Button","block","disabled","length","Register","response","log","socket","UserOverview","balance","stocks","userData","setUserData","useEffect","sessionStorage","getItem","Container","fluid","Row","map","stock","i","Col","sm","key","stockname","qty","UserBalance","setBalance","show","setShow","handleClose","variant","Modal","onHide","Header","closeButton","Title","Body","Footer","User","Tabs","defaultActiveKey","Tab","eventKey","title","StockInterface","stockBuy","setStockBuy","showBuy","setShowBuy","handleBuyClose","stockSell","setStockSell","showSell","setShowSell","handleSellClose","validateBuySell","amount","StockChart","slugify","text","toString","toLowerCase","replace","io","emit","name","graphs","first","graphContainer","document","getElementById","on","palette","Rickshaw","Color","Palette","scheme","graphTitle","createElement","textContent","graphElement","appendChild","graph","Graph","element","width","height","renderer","series","Series","FixedDuration","color","undefined","timeInterval","maxDataPoints","timeBase","Date","getTime","configure","clientWidth","Axis","Time","Y","orientation","tickFormat","Fixtures","Number","formatKMBT","HoverDetail","render","slug","startingPoint","addData","StockPage","match","params","Search","searchResult","setSearchResult","searchStock","search","InputGroup","Prepend","Text","placeholder","aria-label","aria-describedby","onKeyDown","App","setJwt","setItem","removeItem","exact","path","component","Boolean","window","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.48ac54e9.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\n\nimport '../App.css';\n\nexport const NavbarComponent = props => {\n    return (\n        <div>\n          <nav className=\"App-header\">\n          <Navbar bg=\"transparent\" expand=\"lg\">\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                {props.jwt ? (\n                            <Nav.Link href=\"/user\">User profile</Nav.Link>\n                        ) : (\n                            null\n                )}\n                {props.jwt ? (\n                            <Nav.Link href=\"/search\">Search stocks</Nav.Link>\n                        ) : (\n                            null\n                )}\n                {props.jwt ? (\n                            <Nav.Link onClick={props.logout}>Logout</Nav.Link>\n                        ) : (\n                            <Nav.Link href=\"/login\">Login</Nav.Link>\n                )}\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          </nav>\n        </div>\n    );\n};\n\nexport default NavbarComponent;\n","import React from 'react';\n\nconst Home = () => {\n    return (\n    <main>\n      <h1>Home</h1>\n      <p>Hej och välkommen</p>\n    </main>\n    );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\n\nexport const Login = props => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const apiUrl = \"http://localhost:2337\";\n  const apiUrl = \"https://backend.ml-jsramverk.me\";\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n      event.preventDefault();\n\n      let data = {\n          email: email,\n          password: password\n      }\n\n      fetch(apiUrl + `/login`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then(res => {\n            return res.json();\n        }).then(res => {\n            props.jwtAuth(res.data.token, res.data.user);\n            history.push(\"/user\");\n        })\n        .catch(error => console.error('Error:', error));\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block disabled={!validateForm()} type=\"submit\">\n          Login\n        </Button>\n        <p>Dont have an account? <a href=\"/register\">Register here</a></p>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\n\nexport default function Register() {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const apiUrl = \"http://localhost:2337\";\n  const apiUrl = \"https://backend.ml-jsramverk.me\";\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n      event.preventDefault();\n\n      let data = {\n          email: email,\n          password: password\n      }\n\n      fetch(apiUrl + `/register`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n          .then(response => {\n              return response.json();\n          }).then(data => {\n              console.log(data);\n              history.push(\"/\");\n          })\n          .catch(error => console.error('Error:', error));\n  }\n\n  return (\n    <div className=\"Login\">\n    <h3>Register new user</h3>\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\">\n          <FormLabel>Email</FormLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\">\n          <FormLabel>Password</FormLabel>\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block disabled={!validateForm()} type=\"submit\">\n          Register user\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport io from 'socket.io-client';\nimport Rickshaw from 'rickshaw';\nimport 'rickshaw/rickshaw.min.css';\nlet socket;\n\nexport const StockChart = props => {\n    // const socketUrl = \"http://localhost:9300\";\n    const socketUrl = \"https://socket.ml-jsramverk.me\";\n    let stockname = props.stockname\n\n    function slugify(text) {\n        return text.toString().toLowerCase()\n            .replace(/\\s+/g, '-')           // Replace spaces with -\n            .replace(/[^\\w-]+/g, '')       // Remove all non-word chars\n            .replace(/--+/g, '-')         // Replace multiple - with single -\n            .replace(/^-+/, '')             // Trim - from start of text\n            .replace(/-+$/, '');            // Trim - from end of text\n    }\n    useEffect(() => {\n        socket = io(socketUrl);\n    }, []);\n\n    useEffect(() => {\n        socket.emit('stock name', {\n            name: stockname,\n        });\n    }, [stockname]);\n\n    useEffect(() => {\n        let graphs = {};\n        let first = true;\n        let graphContainer = document.getElementById(\"graphs\");\n\n        socket.on('stocks', function (res) {\n            if (first) {\n               var palette = new Rickshaw.Color.Palette({ scheme: 'colorwheel' });\n\n               res.map((stock) => {\n                   let graphTitle = document.createElement(\"h1\");\n\n                   graphTitle.textContent = stock.name;\n\n                   let graphElement = document.createElement(\"div\");\n\n                   graphContainer.appendChild(graphTitle);\n                   graphContainer.appendChild(graphElement);\n\n                   let graph = new Rickshaw.Graph({\n                       element: graphElement,\n                       width: \"500\",\n                       height: \"300\",\n                       renderer: \"line\",\n                       series: new Rickshaw.Series.FixedDuration([{\n                           name: stock.name,\n                           color: palette.color(),\n                       }], undefined, {\n                           timeInterval: 5000,\n                           maxDataPoints: 1000,\n                           timeBase: new Date().getTime() / 1000\n                       })\n                   });\n\n                   graph.configure({\n                       width: graphContainer.clientWidth,\n                   });\n\n                   new Rickshaw.Graph.Axis.Time( { graph: graph } );\n\n                   new Rickshaw.Graph.Axis.Y({\n                       graph: graph,\n                       orientation: 'left',\n                       tickFormat: Rickshaw.Fixtures.Number.formatKMBT\n                   });\n\n                   new Rickshaw.Graph.HoverDetail({\n                       graph: graph\n                   });\n\n                   graph.render();\n\n                   let slug = slugify(stock.name);\n\n                   graphs[slug] = {\n                       name: stock.name,\n                       graph: graph,\n                   };\n                   return \"Done\";\n               });\n               first = false;\n           }\n\n           res.map((stock) => {\n               let slug = slugify(stock.name);\n               let data = {};\n\n               data[stock.name] = stock.startingPoint;\n               graphs[slug].graph.series.addData(data);\n               graphs[slug].graph.render();\n\n               return \"Done\";\n           });\n       });\n    }, []);\n    return (\n        <div className=\"graphs\" id=\"graphs\"></div>\n    );\n};\nexport default StockChart;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst UserOverview = () => {\n    const [userData, setUserData] = useState({\n        balance: null,\n        stocks: [],\n    });\n    // const apiUrl = \"http://localhost:2337\";\n    const apiUrl = \"https://backend.ml-jsramverk.me\";\n\n    useEffect(() => {\n        fetch(apiUrl + `/stock/overview/${sessionStorage.getItem('user')}`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': sessionStorage.getItem('token'),\n            },\n        })\n          .then(res => res.json())\n          .then(res => {\n              console.log(res);\n\n              setUserData({\n                  balance: res.data[0].balance,\n                  stocks: res.data[0].stocks\n              });\n          })\n          .catch(error => console.error('Error:', error));\n    });\n\n    return (\n    <main>\n      <h1>User overview</h1>\n      <p>\n        Current balance: {userData.balance}\n      </p>\n      <h3>Stocks</h3>\n      <Container fluid>\n        <Row>\n            {userData.stocks.map((stock, i) => (\n                <Col sm={4}>\n                <p key={i}>\n                    {stock.stockname}: {stock.qty}\n                </p>\n                </Col>\n            ))}\n        </Row>\n      </Container>\n    </main>\n    );\n};\nexport default UserOverview;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, FormGroup, FormControl, Modal } from \"react-bootstrap\";\n\nconst UserBalance = () => {\n    const [balance, setBalance] = useState(0);\n    const [userData, setUserData] = useState(null);\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    // const apiUrl = \"http://localhost:2337\";\n    const apiUrl = \"https://backend.ml-jsramverk.me\";\n\n    useEffect(() => {\n        fetch(apiUrl + `/stock/add-balance/${sessionStorage.getItem('user')}`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': sessionStorage.getItem('token'),\n            },\n        })\n          .then(res => res.json())\n          .then(res => {\n              console.log(res);\n              setUserData(res.data[0].balance);\n          })\n          .catch(error => console.error('Error:', error));\n    }, []);\n\n    function validateForm() {\n        return balance > 0;\n    }\n\n    const addBalance = event => {\n        event.preventDefault();\n\n        let data = {\n            email: sessionStorage.getItem('user'),\n            balance: balance\n        }\n\n        fetch(apiUrl + `/stock/add-balance`, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          credentials: 'include',\n          headers: {\n              'Content-Type': 'application/json',\n              'x-access-token': sessionStorage.getItem('token'),\n          },\n        })\n          .then(res => {\n              return res.json();\n          }).then(res => {\n              console.log(res);\n              setUserData(res.data[0].balance);\n              handleClose();\n          })\n          .catch(error => console.error('Error:', error));\n    }\n\n    return (\n\n    <div>\n      <h1>User balance</h1>\n      <p>\n        Current balance: {userData}\n      </p>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Add balance to your account\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>How much would you like to add?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <FormGroup controlId=\"balance\">\n              <FormControl\n                autoFocus\n                value={balance}\n                onChange={e => setBalance(e.target.value)}\n              />\n            </FormGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" disabled={!validateForm()} onClick={addBalance}>\n            Add balance\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n    );\n};\n\nexport default UserBalance;\n","import React from 'react';\nimport { Tabs, Tab } from \"react-bootstrap\";\nimport UserOverview from './UserOverview.js';\nimport UserBalance from './UserBalance.js';\n\nconst User = () => {\n    return (\n        <Tabs defaultActiveKey=\"overview\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"overview\" title=\"Overview\">\n            <UserOverview />\n          </Tab>\n          <Tab eventKey=\"balance\" title=\"Balance\">\n            <UserBalance />\n          </Tab>\n        </Tabs>\n    );\n};\nexport default User;\n","import React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl, Modal } from \"react-bootstrap\";\n\nexport const StockInterface = props => {\n    const stockname = props.stockname ;\n    const [stockBuy, setStockBuy] = useState(0);\n    const [showBuy, setShowBuy] = useState(false);\n    const handleBuyClose = () => setShowBuy(false);\n    const handleBuyShow = () => setShowBuy(true);\n    const [stockSell, setStockSell] = useState(0);\n    const [showSell, setShowSell] = useState(false);\n    const handleSellClose = () => setShowSell(false);\n    const handleSellShow = () => setShowSell(true);\n    // const apiUrl = \"http://localhost:2337\";\n    const apiUrl = \"https://backend.ml-jsramverk.me\";\n\n    function validateBuySell() {\n      return stockBuy > 0 || stockSell > 0;\n    }\n\n    const buyStock = event => {\n        event.preventDefault();\n\n        let data = {\n            stock: stockname,\n            email: sessionStorage.getItem('user'),\n            amount: stockBuy\n        }\n\n        fetch(apiUrl + `/stock/buy/`, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          credentials: 'include',\n          headers: {\n              'Content-Type': 'application/json',\n              'x-access-token': sessionStorage.getItem('token'),\n          },\n        })\n          .then(res => {\n              return res.json();\n          }).then(res => {\n              console.log(res);\n              handleBuyClose();\n          })\n          .catch(error => console.error('Error:', error));\n    }\n\n    const sellStock = event => {\n        event.preventDefault();\n\n        let data = {\n            stock: stockname,\n            email: sessionStorage.getItem('user'),\n            amount: stockSell\n        }\n\n        fetch(apiUrl + `/stock/sell/`, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          credentials: 'include',\n          headers: {\n              'Content-Type': 'application/json',\n              'x-access-token': sessionStorage.getItem('token'),\n          },\n        })\n          .then(res => {\n              return res.json();\n          }).then(res => {\n              console.log(res);\n              handleSellClose();\n          })\n          .catch(error => console.error('Error:', error));\n    }\n\n    return (\n    <div>\n      <Button variant=\"success\" onClick={handleBuyShow}>\n        Buy\n      </Button>\n      {' '}\n      <Button variant=\"danger\" onClick={handleSellShow}>\n        Sell\n      </Button>\n\n      <Modal show={showBuy} onHide={handleBuyClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>How much would you like to buy?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <FormGroup controlId=\"buy\">\n              <FormControl\n                autoFocus\n                value={stockBuy}\n                onChange={e => setStockBuy(e.target.value)}\n              />\n            </FormGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleBuyClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" disabled={!validateBuySell()} onClick={buyStock}>\n            Buy\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={showSell} onHide={handleSellClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>How much would you like to sell?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <FormGroup controlId=\"sell\">\n              <FormControl\n                autoFocus\n                value={stockSell}\n                onChange={e => setStockSell(e.target.value)}\n              />\n            </FormGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleSellClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" disabled={!validateBuySell()} onClick={sellStock}>\n            Sell\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n    );\n};\n\nexport default StockInterface;\n","import React from \"react\";\nimport StockInterface from './StockInterface.js';\nimport StockChart from './StockChart.js';\n\nconst StockPage = ({ match }) => {\n    const stockname = match.params.stock ;\n\n    return (\n    <div>\n      <StockInterface stockname={stockname}></StockInterface>\n      <StockChart stockname={stockname}></StockChart>\n    </div>\n    );\n};\n\nexport default StockPage;\n","import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nconst Search = () => {\n    const history = useHistory();\n    const [searchResult, setSearchResult] = useState(\"\");\n    // const apiUrl = \"http://localhost:2337\";\n    const apiUrl = \"https://backend.ml-jsramverk.me\";\n\n    const savingSearch = event => {\n        setSearchResult(event.target.value);\n    };\n\n    const searchHandleKeyDown = event => {\n        if (event.key === 'Enter') {\n            searchStock(event);\n        }\n    };\n\n    const searchStock = event => {\n        event.preventDefault();\n\n        let data = {\n            search: searchResult,\n        }\n        fetch(apiUrl + `/stock/search`, {\n          method: 'POST',\n          body: JSON.stringify(data),\n          credentials: 'include',\n          headers: {\n              'Content-Type': 'application/json',\n              'x-access-token': sessionStorage.getItem('token'),\n          },\n        })\n          .then(res => {\n              return res.json();\n          }).then(res => {\n              console.log(res);\n              history.push(`/stock-page/${res.data[0].stockname}`);\n          })\n          .catch(error => console.error('Error:', error));\n    }\n\n    function validateSearch() {\n        return searchResult.length > 0;\n    }\n\n    return (\n    <div>\n      <h1>User search</h1>\n      <InputGroup className=\"mb-3 search-field\">\n      <InputGroup.Prepend>\n        <InputGroup.Text id=\"basic-addon1\">@stock</InputGroup.Text>\n      </InputGroup.Prepend>\n      <FormControl\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        aria-describedby=\"basic-addon1\"\n        value={searchResult}\n        onChange={savingSearch}\n        onKeyDown={searchHandleKeyDown}\n      />\n      <Button\n          block\n          disabled={!validateSearch()}\n          onClick={searchStock}\n      >\n          Search\n      </Button>\n    </InputGroup>\n    </div>\n    );\n};\n\nexport default Search;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport NavbarComponent from './components/Navbar.js';\nimport Home from './components/Home.js';\nimport Login from './components/Login.js';\nimport Register from './components/Register.js';\nimport User from './components/User.js';\nimport StockPage from './components/StockPage.js';\nimport Search from './components/Search.js';\nimport './App.css';\n\nfunction App() {\n    const [jwt, setJwt] = useState(\n        sessionStorage.getItem('token') || null);\n    const jwtAuth = (token, user) => {\n        console.log(token);\n        console.log(user);\n        sessionStorage.setItem('token', token);\n        sessionStorage.setItem('user', user.email);\n        setJwt(token);\n    };\n    const logout = () => {\n        sessionStorage.removeItem('token');\n        setJwt(null);\n    };\n\n    return (\n  <Router>\n    <div className=\"App\">\n      <NavbarComponent jwt={jwt} logout={logout}></NavbarComponent>\n      <Route exact path=\"/\" component={Home} />\n      <Route\n          path=\"/login\"\n          render={props => <Login {...props} jwtAuth={jwtAuth} />}\n      />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/user\" component={User} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/stock-page/:stock\" component={StockPage} />\n    </div>\n  </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}